{"version":3,"sources":["constants/blockchain.ts","hooks/web3/helpers/switch-network.ts","constants/messages.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","components/Header.jsx","components/Main.jsx","App.jsx","index.js"],"names":["Networks","switchRequest","window","ethereum","request","method","params","chainId","swithNetwork","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","t1","console","log","stop","apply","this","arguments","DEFAULD_NETWORK","Binance","messages","RPC_ID","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","Error","onChainProvider","useMemo","objectSpread","Web3ContextProvider","children","_useState","useDispatch","useState","_useState2","slicedToArray","connected","setConnected","_useState3","_useState4","chainID","_useState5","_useState6","providerChainID","setProviderChainID","_useState7","_useState8","address","setAddress","_useState9","_useState10","uri","_useState11","StaticJsonRpcProvider","_useState12","provider","setProvider","_useState13","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","defineProperty","custom-walletlink","display","logo","description","appName","networkUrl","WalletLink","connector","_connector","_","walletLink","makeWeb3Provider","enable","abrupt","_x","_x2","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","_ref2","_callee2","chain","_context2","changeNetwork","_x3","_newNetwork","oldNetwork","_ref3","_callee3","otherChainID","network","_context3","Number","_x4","connect","_callee4","connectedProvider","connectedAddress","_context4","sent","Web3Provider","getNetwork","then","getSigner","getAddress","Ethereum","checkWrongNetwork","_ref5","_callee5","_context5","confirm","disconnect","_callee6","_context6","clearCachedProvider","react_default","createElement","Provider","value","Header","props","_useWeb3Context","nftContract","setNftContract","setMainLoading","totalMineted","setTotalMineted","numberMint","setNumberMint","noticeToShow","setNoticeToShow","useEffect","loadData","web3","_nftContract","totalSupply","Web3","eth","Contract","NftJson","abi","methods","call","toString","mintNFT","_publicCost","_mintCostNow","everyMintCost","mint","send","from","confirmationNumber","receipt","error","message","Fragment","className","style","backgroundColor","src","width","height","alt","href","onClick","concat","substring","length","textAlign","color","id","aria-hidden","type","aria-setsize","disable","Main","class","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","App","store","createStore","state","undefined","action","text","dispatch","es","web3_context_Web3ContextProvider","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.30b3379e.chunk.js","sourcesContent":["export const TOKEN_DECIMALS = 18;\n\nexport enum Networks {\n  AVAX = 43114,\n  Ethereum = 1,\n  Binance = 56\n}\n\nexport const DEFAULD_NETWORK = Networks.Binance;\n","import { Networks } from \"../../../constants/blockchain\";\n\nconst switchRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x38\" }],\n    });\n};\n\nconst addChainRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [\n            {\n                chainId: \"0x38\",\n                chainName: \"Binance Mainnet\",\n                rpcUrls: [\"https://bsc-dataseed.binance.org\"],\n                blockExplorerUrls: [\"https://bscscan.com\"],\n                nativeCurrency: {\n                    name: \"BNB\",\n                    symbol: \"BNB\",\n                    decimals: 18,\n                },\n            },\n        ],\n    });\n};\n\nexport const swithNetwork = async () => {\n    if (window.ethereum) {\n        try {\n            await switchRequest();\n        } catch (error: any) {\n            if (error.code === 4902) {\n                try {\n                    await addChainRequest();\n                    await switchRequest();\n                } catch (addError) {\n                    console.log(error);\n                }\n            }\n            console.log(error);\n        }\n    }\n};\n","export const messages = {\n  please_connect: \"Please connect your wallet to the binance network to use Wonderland.\",\n  please_connect_wallet: \"Please connect your wallet.\",\n  try_mint_more: (value: string) =>\n    `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} SBR.`,\n  before_minting: \"Before minting, enter a value.\",\n  existing_mint:\n    \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\n  before_stake: \"Before staking, enter a value.\",\n  before_unstake: \"Before un staking, enter a value.\",\n  tx_successfully_send: \"Your transaction was successfully sent\",\n  your_balance_updated: \"Your balance was successfully updated\",\n  nothing_to_claim: \"You have nothing to claim\",\n  something_wrong: \"Something went wrong\",\n  switch_to_avalanche: \"Switch to the binance network?\",\n  slippage_too_small: \"Slippage too small\",\n  slippage_too_big: \"Slippage too big\",\n  your_balance_update_soon: \"Your balance will update soon\",\n  before_wrap: \"Before wrapping, enter a value.\",\n  before_unwrap: \"Before un wrapping, enter a value.\",\n};\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { getMainnetURI,swithNetwork } from \"./helpers\";\nimport { DEFAULD_NETWORK } from \"../../constants\";\nimport { Networks } from \"../../constants\";\nimport { messages } from \"../../constants/messages\";\nimport { useDispatch } from \"react-redux\";\nimport WalletLink from 'walletlink'\n\n\nconst RPC_ID = 'https://bsc-dataseed.binance.org'\n\n\ntype onChainProvider = {\n    connect: () => Promise<Web3Provider>;\n    disconnect: () => void;\n    checkWrongNetwork: () => Promise<boolean>;\n    provider: JsonRpcProvider;\n    address: string;\n    connected: Boolean;\n    web3Modal: Web3Modal;\n    chainID: number;\n    web3?: any;\n    providerChainID: number;\n    hasCachedProvider: () => boolean;\n};\n\nexport type Web3ContextData = {\n    onChainProvider: onChainProvider;\n} | null;\n\nconst Web3Context = React.createContext<Web3ContextData>(null);\n\nexport const useWeb3Context = () => {\n    const web3Context = useContext(Web3Context);\n    if (!web3Context) {\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\n    }\n    const { onChainProvider } = web3Context;\n    return useMemo(() => {\n        return { ...onChainProvider };\n    }, [web3Context]);\n};\n\nexport const useAddress = () => {\n    const { address } = useWeb3Context();\n    return address;\n};\n\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const [connected, setConnected] = useState(false);\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\n    const [address, setAddress] = useState(\"\");\n\n    const [uri, setUri] = useState(getMainnetURI());\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\n\n    const [web3Modal] = useState<Web3Modal>(\n        new Web3Modal({\n            cacheProvider: true,\n            providerOptions: {\n                walletconnect: {\n                    package: WalletConnectProvider,\n                    options: {\n                        rpc: {\n                            // [Networks.Ethereum]: getMainnetURI(),\n                            [Networks.Binance]: RPC_ID, // required\n\n                        },\n                    },\n                },\n                'custom-walletlink': {\n                    display: {\n                      logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n                      name: 'Coinbase',\n                      description: 'Connect to Coinbase Wallet (not Coinbase App)',\n                    },\n                    options: {\n                      appName: 'Coinbase', // Your app name\n                      networkUrl: RPC_ID,\n                      chainId: Networks.Binance,\n                    },\n                    package: WalletLink,\n                    connector: async (_, options) => {\n                      const { appName, networkUrl, chainId } = options\n                      const walletLink = new WalletLink({\n                        appName,\n                      })\n                      const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n                      await provider.enable()\n                      return provider\n                    },\n                  },\n            },\n        }),\n    );\n\n    const hasCachedProvider = (): boolean => {\n        if (!web3Modal) return false;\n        if (!web3Modal.cachedProvider) return false;\n        return true;\n    };\n\n    const _initListeners = useCallback(\n        (rawProvider: JsonRpcProvider) => {\n            if (!rawProvider.on) {\n                return;\n            }\n\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\n\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\n                changeNetwork(chain);\n            });\n\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\n                if (!oldNetwork) return;\n                window.location.reload();\n            });\n        },\n        [provider],\n    );\n\n    const changeNetwork = async (otherChainID: number) => {\n        const network = Number(otherChainID);\n\n        setProviderChainID(network);\n    };\n\n    const connect = useCallback(async () => {\n        const rawProvider = await web3Modal.connect();\n        setProvider(rawProvider);\n\n        _initListeners(rawProvider);\n\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\n\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\n\n        setAddress(connectedAddress);\n\n        setProviderChainID(chainId);\n\n        if (chainId === Networks.Ethereum) {\n        }\n\n        setConnected(true);\n\n        return connectedProvider;\n    }, [provider, web3Modal, connected]);\n\n    const checkWrongNetwork = async (): Promise<boolean> => {\n        if (providerChainID !== DEFAULD_NETWORK) {\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\n            if (shouldSwitch) {\n                await swithNetwork();\n                window.location.reload();\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    const disconnect = useCallback(async () => {\n        web3Modal.clearCachedProvider();\n        setConnected(false);\n\n        setTimeout(() => {\n            window.location.reload();\n        }, 1);\n    }, [provider, web3Modal, connected]);\n\n    const onChainProvider = useMemo(\n        () => ({\n            connect,\n            disconnect,\n            hasCachedProvider,\n            provider,\n            connected,\n            address,\n            chainID,\n            web3Modal,\n            providerChainID,\n            checkWrongNetwork,\n        }),\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\n    );\n    //@ts-ignore\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\n};\n","export const getMainnetURI = (): string => {\n    return \"https://api.avax.network/ext/bc/C/rpc\";\n};\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Web3 from \"web3\";\r\nimport NftJson from \"../abis/NftJson.json\";\r\n\r\nimport { useWeb3Context } from \"../hooks/web3\";\r\n\r\nexport default function Header(props) {\r\n\r\n    const { connect, disconnect, connected, providerChainID, checkWrongNetwork, address, provider, chainID } = useWeb3Context();\r\n\r\n    const [nftContract, setNftContract] = useState(null);\r\n    const [mainLoading, setMainLoading] = useState(false);\r\n    const [totalMineted, setTotalMineted] = useState(null)\r\n    const [numberMint, setNumberMint] = useState(1);\r\n    // const [mintCost, setMintCost] = useState(0.03)\r\n    const [noticeToShow, setNoticeToShow] = useState(\"Please connect wallet to Mint NFT\");\r\n\r\n\r\n    const incNumber = () =>\r\n        numberMint > 19 ? setNumberMint(numberMint) : setNumberMint(numberMint + 1);\r\n    const decNumber = () =>\r\n        numberMint > 1 ? setNumberMint(numberMint - 1) : setNumberMint(numberMint);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            loadData();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            if (providerChainID == chainID) {\r\n                loadData();\r\n            } else {\r\n                checkWrongNetwork()\r\n            }\r\n        }\r\n    }, [connected]);\r\n\r\n\r\n\r\n    const loadData = async () => {\r\n        setMainLoading(true);\r\n        const web3 = new Web3(provider);\r\n        const networkAddress = '0xc64930C5Fa5C4ed5842307427c6EeCe09E86c597';\r\n        const _nftContract = await new web3.eth.Contract(NftJson.abi, networkAddress);\r\n        setNftContract(_nftContract)\r\n\r\n        // const _publicCost = await _nftContract.methods.PRICE().call();\r\n        // setMintCost(_publicCost.toString() / 10 ** 18)\r\n        setNoticeToShow('Connected, Ready to mint NFT')\r\n        const totalSupply = await _nftContract.methods.totalSupply().call();\r\n        setTotalMineted(totalSupply.toString())\r\n        setMainLoading(false);\r\n    }\r\n\r\n\r\n    const mintNFT = async () => {\r\n        if (connected) {\r\n            setNoticeToShow('Minting, Please Wait...');\r\n            setMainLoading(true);\r\n            \r\n                const _publicCost = await nftContract.methods.everyMintCost().call();\r\n                const _mintCostNow = _publicCost.toString();\r\n\r\n                await nftContract.methods\r\n                    .mint(numberMint)\r\n                    .send({ from: address, value: _mintCostNow * numberMint })\r\n                    .on('confirmation', (confirmationNumber, receipt) => {\r\n                        console.log(receipt);\r\n                        loadData();\r\n                    })\r\n                    .on('error', function (error, receipt) {\r\n                        console.log(error);\r\n                        setNoticeToShow(error.message);\r\n                        loadData();\r\n                    });\r\n            \r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"header\" style={{backgroundColor: 'rgb(215, 227, 255)'}}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n              \r\n\r\n\r\n\t\t\t\t\t<a className=\"logo\"><img src=\"images/1.png\" width=\"70\" height=\"70\" alt=\"\" /> LilFLoki</a>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t\t\t  <div className=\"h-main\">\r\n                      {connected\r\n                      ?\r\n                      <a href=\"#\" onClick={connect} className=\"wallet-btn\">{`${address.substring(0,5)}...${address.substring(address.length - 5,address.length)}`}</a>\r\n                    :\r\n                    <a href=\"#\" onClick={connect} className=\"wallet-btn\">CONNECT WALLET</a>\r\n                    }\r\n                      <div className=\"social\">\r\n                        <ul>\r\n                          <li><a href=\"https://twitter.com/thelilfloki/\"><img src=\"images/twitter.png\" width=\"35px\" height=\"35px\" alt=\"\"/></a></li>\r\n                          <li><a href=\"https://t.me/thelilfloki\"><img src=\"images/telegram.png\" width=\"29px\" height=\"29px\"alt=\"\"/></a></li>\r\n                          {/* <!--li><a href=\"#\"><img src=\"images/opensea.svg\" alt=\"\"></a></li--> */}\r\n                        </ul>\r\n\t\t\t\t\t  </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className=\"banner-sec\" style={{backgroundColor: 'rgb(215, 227, 255)'}}>\r\n\t\t\t\t  <div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t  <div className=\"col-lg-6\">\r\n\t\t\t\t\t    <div className=\"banner-img\">\r\n\t\t\t\t\t\t  <img src=\"images/HAND.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"col-lg-6\">\r\n\t\t\t\t\t\t<div className=\"banner-text\">\r\n\t\t\t\t\t\t  <h1 style={{backgroundColor: '#001aff', textAlign: 'center'}}>Lil Floki\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t    <h6 style={{color: 'black'}}>Taking The NFT World By Storm.</h6>\r\n\t\t\t\t\t\t\t  <p style={{color: 'black'}}>The worlds first token dedicated to donating to New Zealand dog shelters while also giving BNB rewards for holders*\r\n\r\n\t\t\t\t\t\t\t  </p>\r\n\t\t\t\t\t\t\t  <p style={{color: 'black'}}>The LilFlokis public sales opens on Saturday, January 15th, 8pm EST.</p>\r\n\t\t\t\t\t       <div className=\"mint-solpup-main\">\r\n\t\t\t\t\t\t     <h3 style={{color: 'black'\r\n\t\t\t\t\t\t\t }}>Buy\r\n\t\t\t\t\t\t\t\tSoon!</h3>\r\n\t\t\t\t\t\t\t   <p style={{color: 'black'}}>Buy LilFloki \r\n\t\t\t\t\t\t\t   </p>\r\n                               {totalMineted != null&&\r\n                               <p style={{color: 'black'}}>total Minted Nfts: {totalMineted} \r\n\t\t\t\t\t\t\t   </p>\r\n                               }\r\n\t\t\t\t\t\t\t     <div className=\"min-qty-main\">\r\n\t\t\t\t\t\t\t\t   <div className=\"control\">\r\n\t\t\t\t\t\t\t\t\t <button  onClick={decNumber} className=\"bttn bttn-left\" id=\"minus\"><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t\t\t\t\t\t   <input  value={numberMint} type=\"number\" className=\"input\" id=\"input\"/>\r\n\t\t\t\t\t\t\t\t\t <button onClick={incNumber} className=\"bttn bttn-right\" id=\"plus\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t\t\t\t <a className=\"mint-now-btn\" aria-setsize=\"150\" href=\"#\">Sale: 15/01/22</a>\r\n\t\t\t\t\t\t\t\t\t <br/>\r\n\t\t\t\t\t\t\t\t\t <button  disable={connected} className=\"mint-now-btn-full\" onClick={mintNFT}>Mint Nft</button>\r\n                                     <p style={{color:'black'}}>{noticeToShow}</p>\r\n\t\t\t\t\t\t\t\t\t <a className=\"mint-now-btn-full\" href=\"invite/G39ha3V9Xf.html\">Join Our Discord!</a>\r\n\t\t\t\t\t\t\t\t   <div className=\"clear\"></div>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</section>\r\n                </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nimport { useWeb3Context } from \"../hooks/web3\";\r\n\r\nexport default function Main(props) {\r\n    const { connect, connected, address} = useWeb3Context();\r\n\r\n    return (\r\n        <>\r\n            <div class=\"traits-sec\" style={{backgroundColor:'rgb(215, 227, 255)'}}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 order-last\">\r\n                            <div class=\"traits-img\">\r\n                                <img src=\"images/a.gif\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"traits-info\">\r\n                                <h1 style={{color: 'black'}}>Traits</h1>\r\n                                <p style={{color: 'black'}}>There are 200+ traits, a table showing each trait and its rarity % will be released after mint.</p>\r\n                                {connected\r\n                                ?\r\n                                <a  class=\"wallet-btn\">{`${address.substring(0,5)}...${address.substring(address.length - 5,address.length)}`}</a>\r\n                            :\r\n                            <a onClick={connect} href=\"#\" class=\"wallet-btn\">CONNECT WALLET</a>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"faqs-sec\" style={{backgroundColor: 'rgb(215, 227, 255)'}}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"title\">\r\n                                <h1 style={{color: 'black'}}>FAQs</h1>\r\n                            </div>\r\n\r\n                            <div class=\"faqs-main\">\r\n                                <div id=\"accordion\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\" id=\"headingOne\">\r\n                                            <h5 class=\"mb-0\">\r\n                                                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">How do i Buy LilFloki?</button>\r\n                                            </h5>\r\n                                        </div>\r\n\r\n                                        <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n                                            <div class=\"card-body\">\r\n                                                <p>Lil Floki is a token originating on the Binance Smart Chain network. You can buy it on Pancakeswap by purchasing Smart Chain BNB and swapping it for Lil Floki tokens.\r\n                                                </p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\" id=\"headingTwo\">\r\n                                            <h5 class=\"mb-0\">\r\n                                                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">How do our Tokenomics Work?</button>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\r\n                                            <div class=\"card-body\">\r\n                                                <p> If you are purchasing Lil Floki through the Pancakeswap Decentralized Exchange, the tax will be the following.\r\n\r\n                                                    Tax On Buys: 13% Rewards: 2% Liquidity: 3% Marketing & Charity: 7% Buy-back and Burn: 1%\r\n                                                    Tax On Sells: 13% Rewards: 2% Liquidity: 3% Marketing & Charity: 7% Buy-back and Burn: 1%\r\n\r\n                                                    To utilize original tokenomics as intended, purchase Lil Floki on the Pancakeswap Decentralized Exchange. (Centralized exchanges/wallets may not apply tokenomics/redistribution).\r\n                                                    </p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\" id=\"headingFive\">\r\n                                            <h5 class=\"mb-0\">\r\n                                                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">What is the total supply?</button>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div id=\"collapseFive\" class=\"collapse\" aria-labelledby=\"headingFive\" data-parent=\"#accordion\">\r\n                                            <div class=\"card-body\">\r\n                                                <p> The total supply of tokens is 1,000,000,000,000,000 (1 Quadrillion). Max buy and sell limits are 1% of the total supply of tokens per transaction. (10 Trillion tokens can be traded at once)\r\n                                                </p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\" id=\"headingSix\">\r\n                                            <h5 class=\"mb-0\">\r\n                                                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseSix\" aria-expanded=\"false\" aria-controls=\"collapseSix\">How are BNB Tokens distributed?</button>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div id=\"collapseSix\" class=\"collapse\" aria-labelledby=\"headingSix\" data-parent=\"#accordion\">\r\n                                            <div class=\"card-body\">\r\n                                                <p>Easy! BNB Rewards will be airdropped into the same wallet where you are holding your Lil Floki tokens. Usually these will come every 60 minutes. You don't have to do anything to recieve these rewards, just buy and hold your Lil Floki tokens. The rewards that come are based on the percentage of your holdings, the more tokens you own, the bigger your BNB rewards will be. We have developed a dashboard where you can track your BNB rewards.\r\n                                                </p></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer\" style={{backgroundColor: 'cadetblue'}}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <ul class=\"f-social\">\r\n                                <li><a href=\"https://twitter.com/thelilfloki\"><img src=\"images/twitter.png\" width=\"20px\" height=\"20px\" alt=\"\"/></a></li>\r\n                                <li><a href=\"https://t.me/thelilfloki\"><img src=\"images/telegram.png\" width=\"20px\" height=\"20px\" alt=\"\"/></a></li>\r\n                                {/* <!--li><a href=\"#\"><img src=\"images/opensea.svg\" alt=\"\"></a></li--> */}\r\n                        </ul>\r\n                        <p>&copy; Contact Us\r\n                            lilflokinft@gmail.com\r\n                            Business inquiries only, please.</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Web3ContextProvider } from \"./hooks/web3\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from 'redux'\r\n\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nexport default function App() {\r\n\r\n\r\n  function todos(state = [], action) {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        return state.concat([action.text])\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  const store = createStore(todos, ['Use Redux'])\r\n\r\n  store.dispatch({\r\n    type: 'ADD_TODO',\r\n    text: 'Read the docs'\r\n  })\r\n\r\n\r\n  return (\r\n    <Provider store={store}>\r\n\r\n      <Web3ContextProvider>\r\n        <Header />\r\n        <Main />\r\n\r\n      </Web3ContextProvider>\r\n    </Provider >\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}